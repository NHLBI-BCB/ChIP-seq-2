#!/bin/bash
#PBS -l nodes=1:ppn=4

GENOME="mm9"
AVG=0

#### usage ####
usage() {
	echo Program: "bed2phastCons (compute phastcons conservation score corresponding to input BED file)"
	echo Author: BRIC, University of Copenhagen, Denmark
	echo Version: 1.0
	echo Contact: pundhir@binf.ku.dk
	echo "Usage: bed2phastCons -i <file> -o <dir> -s <dir>"
	echo "Options:"
	echo " -i <file>   [input file containing genomic coordinate in BED format (can be stdin)]"
    echo "             [NOTE: fourth column (name) should be unique]"
    echo " -o <dir>    [output directory]"
    echo " -s <dir>    [directory containing .starch files]"
    echo "             [MORE INFO: https://www.biostars.org/p/129981/]"
    echo "[OPTIONS]"
    echo " -g <string> [genome (default: mm9)]"
	echo " -h          [help]"
	echo
	exit 0
}

#### parse options ####
while getopts i:o:s:g:h ARG; do
	case "$ARG" in
		i) INPUTBEDFILE=$OPTARG;;
        o) OUTDIR=$OPTARG;;
        s) STARCHDIR=$OPTARG;;
        g) GENOME=$OPTARG;;
		h) HELP=1;;
	esac
done

## usage, if necessary file and directories are given/exist
if [ -z "$INPUTBEDFILE" -o -z "$OUTDIR" -o ! -d "$STARCHDIR" -o "$HELP" ]; then
	usage
fi

## create output directory, if it does not exist
if [ ! -d "$OUTDIR" ]; then
    mkdir -p $OUTDIR
fi

## populating files based on input genome
if [ "$GENOME" == "mm9" ]; then
    GENOME_FILE="/home/pundhir/project/genome_annotations/mouse.mm9.genome"
elif [ "$GENOME" == "hg19" ]; then
    GENOME_FILE="/home/pundhir/project/genome_annotations/human.hg19.genome"
else
    echo "Presently the program only support analysis for mm9 or hg19"
    echo
    usage
fi

## create temporary BED file if input is from stdin
if [ "$INPUTBEDFILE" == "stdin" ]; then
    TMP=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
    while read LINE; do
        echo ${LINE}
    done | perl -ane '$line=""; foreach(@F) { $line.="$_\t"; } $line=~s/\t$//g; print "$line\n";' | sort -k 1,1 -k 2n,2 -k 3n,3 > $TMP
    INPUTBEDFILE=$TMP
fi

## compute phastcons conservation scores for input BED file
for i in `seq 1 22` X Y M;
do
    phastConFn="$STARCHDIR/chr${i}.phastCons*.wigFix.starch";
    #echo "$phastConFn"
    if [ $(ls $phastConFn | wc -l) -eq 1 ]; then
        echo "mapping signal for chromosome chr${i}...";
        bedmap --echo --mean --chrom chr${i} --delim '\t' $INPUTBEDFILE ${phastConFn} > $OUTDIR/regions_with_avg_phastcons.${i}.bed &
    fi
done

wait

## make final output file
echo -e "make final output file.. "
NCOL=$(cat $OUTDIR/regions_with_avg_phastcons.*.bed | head -n 1 | perl -ane 'print scalar(@F);')

join -j 4 -o 1.1 1.2 1.3 1.4 1.5 1.6 2.$NCOL <(sort -k 4,4 $INPUTBEDFILE) <(cat $OUTDIR/regions_with_avg_phastcons.*.bed | sort -k 4,4) | perl -ane '$des=(); foreach(@F) { chomp($_); $des.="$_\t"; } $des=~s/\t$//g; print "$des\n";' > $OUTDIR/ALL.PHASTCONS

## remove temporary file, if exists
if [ ! -z "$TMP" ]; then
    rm $TMP
fi
echo "done"

exit
