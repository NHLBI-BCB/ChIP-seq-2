#!/bin/bash
#PBS -l nodes=1:ppn=4

## DEPENDENCIES
CHRSIZE="/home/pundhir/software/RNAPipe/data/Mus_musculus/Ensembl/NCBIM37/ChromInfoRef.txt"
EXTEND=0

#### usage ####
usage() {
	echo Program: "bam2bwForChIP (convert bam to bigWig format with read extension)"
	echo Author: BRIC, University of Copenhagen, Denmark
	echo Version: 1.0
	echo Contact: pundhir@binf.ku.dk
	echo "Usage: bam2bwForChIP -i <file> [OPTIONS]"
    echo "[INPUT]"
	echo " -i <file>   [input BAM file]"
	echo "[OPTIONS]:"
    echo " -o <dir>    [output directory (default: bam file location)]"
    echo " -c <file>   [file having chromosome's size. required for genomecov]"
    echo "             [default: ~/software/RNAPipe/data/Mus_musculus/Ensembl/NCBIM37/ChromInfoRef.txt]"
    echo " -k          [keep bedGraph file also]"
    echo " -e <int>    [extend 3' end of reads by input number of bases (useful for ChIP-seq data)]"
    echo " -s          [scale the coverage to TPM]"
	echo " -h          [help]"
	echo
	exit 0
}

#### parse options ####
while getopts i:o:c:ke:sh ARG; do
	case "$ARG" in
		i) BAMFILE=$OPTARG;;
        o) OUTDIR=$OPTARG;;
        c) CHRSIZE=$OPTARG;;
        k) KEEP=1;;
        e) EXTEND=$OPTARG;;
        s) SCALE=$OPTARG;;
		h) HELP=1;;
	esac
done

## usage, if necessary file and directories are given/exist
if [ ! -f "$BAMFILE" -o "$HELP" ]; then
	usage
fi

## retrieve file name
if [ ! -z "$OUTDIR" ]; then
    if [ ! -d "$OUTDIR" ]; then
        mkdir -p $OUTDIR
    fi

    ID=`echo $BAMFILE | perl -ane '$_=~s/^.+\///g; $_=~s/\..+$//g; print $_;'`;

    ## create bigwig files for viualization at the UCSC genome browser
    if [ -z "$SCALE" ]; then
        bedtools bamtobed -i $BAMFILE -bed12 | bedtools slop -i stdin -g $CHRSIZE -s -l 0 -r $EXTEND | bedtools genomecov -bg -i stdin -g $CHRSIZE -split > $OUTDIR/$ID.bedGraph
    else
        MAPPEDREADS=`samtools idxstats $BAMFILE | grep -wE "^[0-9a-zA-Z]+" | perl -ane '$sum+=$F[2]; END { print "$sum"; }'`;
        SCALE_FACTOR=$(echo $MAPPEDREADS | perl -ane 'printf("%0.6f", 1000000/'$MAPPEDREADS');')
        bedtools bamtobed -i $BAMFILE -bed12 | bedtools slop -i stdin -g $CHRSIZE -s -l 0 -r $EXTEND | bedtools genomecov -bg -i stdin -g $CHRSIZE -split -scale $SCALE_FACTOR > $OUTDIR/$ID.bedGraph
    fi

    bedGraphToBigWig $OUTDIR/$ID.bedGraph $CHRSIZE $OUTDIR/$ID.bw

    if [ -z "$KEEP" ]; then
        rm $OUTDIR/$ID.bedGraph 
    fi
else
    ID=`echo $BAMFILE | perl -ane '$_=~s/\.bam*//g; print $_;'`;

    ## create bigwig files for viualization at the UCSC genome browser
    if [ -z "$SCALE" ]; then
        bedtools bamtobed -i $BAMFILE -bed12 | bedtools slop -i stdin -g $CHRSIZE -s -l 0 -r $EXTEND | bedtools genomecov -bg -i stdin -g $CHRSIZE -split > $ID.bedGraph
    else
        MAPPEDREADS=`samtools idxstats $BAMFILE | grep -wE "^[0-9a-zA-Z]+" | perl -ane '$sum+=$F[2]; END { print "$sum"; }'`;
        SCALE_FACTOR=$(echo $MAPPEDREADS | perl -ane 'printf("%0.6f", 1000000/'$MAPPEDREADS');')
        bedtools bamtobed -i $BAMFILE -bed12 | bedtools slop -i stdin -g $CHRSIZE -s -l 0 -r $EXTEND | bedtools genomecov -bg -i stdin -g $CHRSIZE -split -scale $MAPPEDREADS > $ID.bedGraph
    fi

    bedGraphToBigWig $ID.bedGraph $CHRSIZE $ID.bw

    if [ -z "$KEEP" ]; then
        rm $ID.bedGraph 
    fi
fi

#bigWigCmd = "./src/bamToBed -i " + name + "/mapped.bam " + "| ./src/slopBed -i stdin -g src/" + chromFile + " -s -l -0 -r " + str(args.fragment_length[0]-readLength) + " | ./src/genomeCoverageBed -bg -i stdin -g src/" + chromFile + "| ./src/wigToBigWig stdin src/" + chromFile + " " + name + "/mapped.bw"
